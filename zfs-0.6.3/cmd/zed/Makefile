# Makefile.in generated by automake 1.11.3 from Makefile.am.
# cmd/zed/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/zfs
pkgincludedir = $(includedir)/zfs
pkglibdir = $(libdir)/zfs
pkglibexecdir = $(libexecdir)/zfs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(dist_zedconf_DATA) $(dist_zedexec_SCRIPTS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Rules.am
sbin_PROGRAMS = zed$(EXEEXT)
subdir = cmd/zed
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/always-no-aggressive-loop-optimizations.m4 \
	$(top_srcdir)/config/always-no-unused-but-set-variable.m4 \
	$(top_srcdir)/config/kernel-acl.m4 \
	$(top_srcdir)/config/kernel-automount.m4 \
	$(top_srcdir)/config/kernel-bdev-block-device-operations.m4 \
	$(top_srcdir)/config/kernel-bdev-logical-size.m4 \
	$(top_srcdir)/config/kernel-bdev-physical-size.m4 \
	$(top_srcdir)/config/kernel-bdi-setup-and-register.m4 \
	$(top_srcdir)/config/kernel-bdi.m4 \
	$(top_srcdir)/config/kernel-bio-bvec-iter.m4 \
	$(top_srcdir)/config/kernel-bio-end-io-t-args.m4 \
	$(top_srcdir)/config/kernel-bio-failfast.m4 \
	$(top_srcdir)/config/kernel-bio-rw-syncio.m4 \
	$(top_srcdir)/config/kernel-blk-end-request.m4 \
	$(top_srcdir)/config/kernel-blk-fetch-request.m4 \
	$(top_srcdir)/config/kernel-blk-queue-discard.m4 \
	$(top_srcdir)/config/kernel-blk-queue-flush.m4 \
	$(top_srcdir)/config/kernel-blk-queue-io-opt.m4 \
	$(top_srcdir)/config/kernel-blk-queue-max-hw-sectors.m4 \
	$(top_srcdir)/config/kernel-blk-queue-max-segments.m4 \
	$(top_srcdir)/config/kernel-blk-queue-nonrot.m4 \
	$(top_srcdir)/config/kernel-blk-queue-physical-block-size.m4 \
	$(top_srcdir)/config/kernel-blk-requeue-request.m4 \
	$(top_srcdir)/config/kernel-blk-rq-bytes.m4 \
	$(top_srcdir)/config/kernel-blk-rq-pos.m4 \
	$(top_srcdir)/config/kernel-blk-rq-sectors.m4 \
	$(top_srcdir)/config/kernel-blkdev-get-by-path.m4 \
	$(top_srcdir)/config/kernel-blkdev-get.m4 \
	$(top_srcdir)/config/kernel-block-device-operations-release-void.m4 \
	$(top_srcdir)/config/kernel-check-disk-size-change.m4 \
	$(top_srcdir)/config/kernel-clear-inode.m4 \
	$(top_srcdir)/config/kernel-commit-metadata.m4 \
	$(top_srcdir)/config/kernel-create-nameidata.m4 \
	$(top_srcdir)/config/kernel-d-make-root.m4 \
	$(top_srcdir)/config/kernel-d-obtain-alias.m4 \
	$(top_srcdir)/config/kernel-dentry-operations.m4 \
	$(top_srcdir)/config/kernel-dirty-inode.m4 \
	$(top_srcdir)/config/kernel-discard-granularity.m4 \
	$(top_srcdir)/config/kernel-elevator-change.m4 \
	$(top_srcdir)/config/kernel-encode-fh-inode.m4 \
	$(top_srcdir)/config/kernel-evict-inode.m4 \
	$(top_srcdir)/config/kernel-fallocate.m4 \
	$(top_srcdir)/config/kernel-fmode-t.m4 \
	$(top_srcdir)/config/kernel-fsync.m4 \
	$(top_srcdir)/config/kernel-get-disk-ro.m4 \
	$(top_srcdir)/config/kernel-get-gendisk.m4 \
	$(top_srcdir)/config/kernel-insert-inode-locked.m4 \
	$(top_srcdir)/config/kernel-invalidate-bdev-args.m4 \
	$(top_srcdir)/config/kernel-is_owner_or_cap.m4 \
	$(top_srcdir)/config/kernel-kobj-name-len.m4 \
	$(top_srcdir)/config/kernel-lookup-bdev.m4 \
	$(top_srcdir)/config/kernel-lookup-nameidata.m4 \
	$(top_srcdir)/config/kernel-lseek-execute.m4 \
	$(top_srcdir)/config/kernel-mkdir-umode-t.m4 \
	$(top_srcdir)/config/kernel-mount-nodev.m4 \
	$(top_srcdir)/config/kernel-open-bdev-exclusive.m4 \
	$(top_srcdir)/config/kernel-rq-for-each_segment.m4 \
	$(top_srcdir)/config/kernel-rq-is_sync.m4 \
	$(top_srcdir)/config/kernel-security-inode-init.m4 \
	$(top_srcdir)/config/kernel-set-nlink.m4 \
	$(top_srcdir)/config/kernel-sget-args.m4 \
	$(top_srcdir)/config/kernel-show-options.m4 \
	$(top_srcdir)/config/kernel-shrink.m4 \
	$(top_srcdir)/config/kernel-truncate-range.m4 \
	$(top_srcdir)/config/kernel-truncate-setsize.m4 \
	$(top_srcdir)/config/kernel-vfs-iterate.m4 \
	$(top_srcdir)/config/kernel-xattr-handler.m4 \
	$(top_srcdir)/config/kernel.m4 $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/user-arch.m4 \
	$(top_srcdir)/config/user-dracut.m4 \
	$(top_srcdir)/config/user-frame-larger-than.m4 \
	$(top_srcdir)/config/user-ioctl.m4 \
	$(top_srcdir)/config/user-libblkid.m4 \
	$(top_srcdir)/config/user-libuuid.m4 \
	$(top_srcdir)/config/user-runstatedir.m4 \
	$(top_srcdir)/config/user-systemd.m4 \
	$(top_srcdir)/config/user-sysvinit.m4 \
	$(top_srcdir)/config/user-udev.m4 \
	$(top_srcdir)/config/user-zlib.m4 $(top_srcdir)/config/user.m4 \
	$(top_srcdir)/config/zfs-build.m4 \
	$(top_srcdir)/config/zfs-meta.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/zfs_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(zedexecdir)" \
	"$(DESTDIR)$(zedconfdir)"
PROGRAMS = $(sbin_PROGRAMS)
am_zed_OBJECTS = zed.$(OBJEXT) zed_conf.$(OBJEXT) zed_event.$(OBJEXT) \
	zed_exec.$(OBJEXT) zed_file.$(OBJEXT) zed_log.$(OBJEXT) \
	zed_strings.$(OBJEXT)
zed_OBJECTS = $(am_zed_OBJECTS)
zed_DEPENDENCIES = $(top_builddir)/lib/libavl/libavl.la \
	$(top_builddir)/lib/libnvpair/libnvpair.la \
	$(top_builddir)/lib/libspl/libspl.la \
	$(top_builddir)/lib/libzfs/libzfs.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(dist_zedexec_SCRIPTS)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(zed_SOURCES)
DIST_SOURCES = $(zed_SOURCES)
DATA = $(dist_zedconf_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ubuntu/zfs/zfs-0.6.3/config/missing --run aclocal-1.11
ALIEN = alien
ALIEN_VERSION = 8.90
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/ubuntu/zfs/zfs-0.6.3/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ubuntu/zfs/zfs-0.6.3/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ubuntu/zfs/zfs-0.6.3/config/missing --run automake-1.11
AWK = gawk
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEBUG_CFLAGS = -DNDEBUG
DEBUG_DMU_TX = _without_debug_dmu_tx
DEBUG_STACKFLAGS = 
DEBUG_ZFS = _without_debug
DEFAULT_INIT_DIR = ${prefix}/etc/init.d
DEFAULT_INIT_SCRIPT = lsb
DEFAULT_PACKAGE = deb
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DPKG = dpkg
DPKGBUILD = dpkg-buildpackage
DPKGBUILD_VERSION = 1.17.5.
DPKG_VERSION = 1.17.5
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FRAME_LARGER_THAN = -Wframe-larger-than=1024
GREP = /bin/grep
HAVE_ALIEN = yes
HAVE_DPKG = yes
HAVE_DPKGBUILD = yes
HAVE_RPM = yes
HAVE_RPMBUILD = yes
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KERNELCPPFLAGS =  -Wno-unused-but-set-variable -fno-aggressive-loop-optimizations -DHAVE_SPL -D_KERNEL -DTEXT_DOMAIN=\"zfs-linux-kernel\" -DNDEBUG 
KERNELMAKE_PARAMS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBBLKID = -lblkid
LIBOBJS = 
LIBS = -luuid -luuid -lz -lz -lz 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUUID = -luuid
LINUX = /usr/src/linux-headers-3.13.0-45-generic
LINUX_OBJ = /usr/src/linux-headers-3.13.0-45-generic
LINUX_SYMBOLS = Module.symvers
LINUX_VERSION = 3.13.0-45-generic
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/ubuntu/zfs/zfs-0.6.3/config/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
NO_AGGRESSIVE_LOOP_OPTIMIZATIONS = -fno-aggressive-loop-optimizations
NO_UNUSED_BUT_SET_VARIABLE = -Wno-unused-but-set-variable
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = zfs
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
RELEASE = 1
RPM = rpm
RPMBUILD = rpmbuild
RPMBUILD_VERSION = 4.11.1
RPM_DEFINE_COMMON = --define "$(DEBUG_ZFS) 1" --define "$(DEBUG_DMU_TX) 1"
RPM_DEFINE_DKMS = 
RPM_DEFINE_KMOD = --define "kernels $(LINUX_VERSION)" --define "require_spldir $(SPL)" --define "require_splobj $(SPL_OBJ)" --define "ksrc $(LINUX)" --define "kobj $(LINUX_OBJ)"
RPM_DEFINE_UTIL = --define "_dracutdir $(dracutdir)" --define "_udevdir $(udevdir)" --define "_udevruledir $(udevruledir)"
RPM_SPEC_DIR = rpm/generic
RPM_VERSION = 4.11.1
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SPL = /usr/src/spl-0.6.3
SPL_OBJ = /usr/src/spl-0.6.3/3.13.0-45-generic
SPL_SYMBOLS = Module.symvers
SPL_VERSION = 0.6.3-1
SRPM_DEFINE_COMMON = --define "build_src_rpm 1"
SRPM_DEFINE_DKMS = 
SRPM_DEFINE_KMOD = 
SRPM_DEFINE_UTIL = 
STRIP = strip
TARGET_ASM_DIR = asm-x86_64
VENDOR = ubuntu
VERSION = 0.6.3
ZFS_CONFIG = all
ZFS_INIT_SYSTEMD = systemd
ZFS_INIT_SYSV = init.d
ZFS_META_ALIAS = zfs-0.6.3-1
ZFS_META_AUTHOR = Sun Microsystems/Oracle, Lawrence Livermore National Laboratory
ZFS_META_DATA = 
ZFS_META_LICENSE = CDDL
ZFS_META_LT_AGE = 
ZFS_META_LT_CURRENT = 
ZFS_META_LT_REVISION = 
ZFS_META_NAME = zfs
ZFS_META_RELEASE = 1
ZFS_META_VERSION = 0.6.3
ZFS_MODULE_LOAD = modules-load.d
ZLIB = -lz
abs_builddir = /home/ubuntu/zfs/zfs-0.6.3/cmd/zed
abs_srcdir = /home/ubuntu/zfs/zfs-0.6.3/cmd/zed
abs_top_builddir = /home/ubuntu/zfs/zfs-0.6.3
abs_top_srcdir = /home/ubuntu/zfs/zfs-0.6.3
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dracutdir = /usr/lib/dracut
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ubuntu/zfs/zfs-0.6.3/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
modulesloaddir = /usr/lib/modules-load.d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
systemdpresetdir = /usr/lib/systemd/system-preset
systemdunitdir = /usr/lib/systemd/system
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
udevdir = /lib/udev
udevruledir = /lib/udev/rules.d
DEFAULT_INCLUDES = -include ${top_builddir}/zfs_config.h \
	-I$(top_srcdir)/include -I$(top_srcdir)/lib/libspl/include
AM_LIBTOOLFLAGS = --silent
AM_CFLAGS = ${DEBUG_CFLAGS} -Wall -Wstrict-prototypes \
	${NO_UNUSED_BUT_SET_VARIABLE} \
	${NO_AGGRESSIVE_LOOP_OPTIMIZATIONS} -fno-strict-aliasing
AM_CPPFLAGS = -D_GNU_SOURCE -D__EXTENSIONS__ -D_REENTRANT \
	-D_POSIX_PTHREAD_SEMANTICS -D_FILE_OFFSET_BITS=64 \
	-D_LARGEFILE64_SOURCE -DTEXT_DOMAIN=\"zfs-linux-user\" \
	-DLIBEXECDIR=\"$(libexecdir)\" \
	-DRUNSTATEDIR=\"$(runstatedir)\" -DSBINDIR=\"$(sbindir)\" \
	-DSYSCONFDIR=\"$(sysconfdir)\"
zed_SOURCES = \
	$(top_srcdir)/cmd/zed/zed.c \
	$(top_srcdir)/cmd/zed/zed.h \
	$(top_srcdir)/cmd/zed/zed_conf.c \
	$(top_srcdir)/cmd/zed/zed_conf.h \
	$(top_srcdir)/cmd/zed/zed_event.c \
	$(top_srcdir)/cmd/zed/zed_event.h \
	$(top_srcdir)/cmd/zed/zed_exec.c \
	$(top_srcdir)/cmd/zed/zed_exec.h \
	$(top_srcdir)/cmd/zed/zed_file.c \
	$(top_srcdir)/cmd/zed/zed_file.h \
	$(top_srcdir)/cmd/zed/zed_log.c \
	$(top_srcdir)/cmd/zed/zed_log.h \
	$(top_srcdir)/cmd/zed/zed_strings.c \
	$(top_srcdir)/cmd/zed/zed_strings.h

zed_LDADD = \
	$(top_builddir)/lib/libavl/libavl.la \
	$(top_builddir)/lib/libnvpair/libnvpair.la \
	$(top_builddir)/lib/libspl/libspl.la \
	$(top_builddir)/lib/libzfs/libzfs.la

zedconfdir = $(sysconfdir)/zfs/zed.d
dist_zedconf_DATA = \
	$(top_srcdir)/cmd/zed/zed.d/zed.rc

zedexecdir = $(libexecdir)/zfs/zed.d
dist_zedexec_SCRIPTS = \
	$(top_srcdir)/cmd/zed/zed.d/all-debug.sh \
	$(top_srcdir)/cmd/zed/zed.d/all-syslog.sh \
	$(top_srcdir)/cmd/zed/zed.d/checksum-email.sh \
	$(top_srcdir)/cmd/zed/zed.d/checksum-spare.sh \
	$(top_srcdir)/cmd/zed/zed.d/data-email.sh \
	$(top_srcdir)/cmd/zed/zed.d/generic-email.sh \
	$(top_srcdir)/cmd/zed/zed.d/io-email.sh \
	$(top_srcdir)/cmd/zed/zed.d/io-spare.sh \
	$(top_srcdir)/cmd/zed/zed.d/resilver.finish-email.sh \
	$(top_srcdir)/cmd/zed/zed.d/scrub.finish-email.sh

zedconfdefaults = \
	all-syslog.sh \
	checksum-email.sh \
	checksum-spare.sh \
	data-email.sh \
	io-email.sh \
	io-spare.sh \
	resilver.finish-email.sh \
	scrub.finish-email.sh

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/config/Rules.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu cmd/zed/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu cmd/zed/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/config/Rules.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
zed$(EXEEXT): $(zed_OBJECTS) $(zed_DEPENDENCIES) $(EXTRA_zed_DEPENDENCIES) 
	@rm -f zed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(zed_OBJECTS) $(zed_LDADD) $(LIBS)
install-dist_zedexecSCRIPTS: $(dist_zedexec_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(zedexecdir)" || $(MKDIR_P) "$(DESTDIR)$(zedexecdir)"
	@list='$(dist_zedexec_SCRIPTS)'; test -n "$(zedexecdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(zedexecdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(zedexecdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_zedexecSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_zedexec_SCRIPTS)'; test -n "$(zedexecdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(zedexecdir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/zed.Po
include ./$(DEPDIR)/zed_conf.Po
include ./$(DEPDIR)/zed_event.Po
include ./$(DEPDIR)/zed_exec.Po
include ./$(DEPDIR)/zed_file.Po
include ./$(DEPDIR)/zed_log.Po
include ./$(DEPDIR)/zed_strings.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

zed.o: $(top_srcdir)/cmd/zed/zed.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed.o -MD -MP -MF $(DEPDIR)/zed.Tpo -c -o zed.o `test -f '$(top_srcdir)/cmd/zed/zed.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed.Tpo $(DEPDIR)/zed.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed.c' object='zed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed.o `test -f '$(top_srcdir)/cmd/zed/zed.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed.c

zed.obj: $(top_srcdir)/cmd/zed/zed.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed.obj -MD -MP -MF $(DEPDIR)/zed.Tpo -c -o zed.obj `if test -f '$(top_srcdir)/cmd/zed/zed.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed.Tpo $(DEPDIR)/zed.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed.c' object='zed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed.obj `if test -f '$(top_srcdir)/cmd/zed/zed.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed.c'; fi`

zed_conf.o: $(top_srcdir)/cmd/zed/zed_conf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_conf.o -MD -MP -MF $(DEPDIR)/zed_conf.Tpo -c -o zed_conf.o `test -f '$(top_srcdir)/cmd/zed/zed_conf.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_conf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_conf.Tpo $(DEPDIR)/zed_conf.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_conf.c' object='zed_conf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_conf.o `test -f '$(top_srcdir)/cmd/zed/zed_conf.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_conf.c

zed_conf.obj: $(top_srcdir)/cmd/zed/zed_conf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_conf.obj -MD -MP -MF $(DEPDIR)/zed_conf.Tpo -c -o zed_conf.obj `if test -f '$(top_srcdir)/cmd/zed/zed_conf.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_conf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_conf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_conf.Tpo $(DEPDIR)/zed_conf.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_conf.c' object='zed_conf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_conf.obj `if test -f '$(top_srcdir)/cmd/zed/zed_conf.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_conf.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_conf.c'; fi`

zed_event.o: $(top_srcdir)/cmd/zed/zed_event.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_event.o -MD -MP -MF $(DEPDIR)/zed_event.Tpo -c -o zed_event.o `test -f '$(top_srcdir)/cmd/zed/zed_event.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_event.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_event.Tpo $(DEPDIR)/zed_event.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_event.c' object='zed_event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_event.o `test -f '$(top_srcdir)/cmd/zed/zed_event.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_event.c

zed_event.obj: $(top_srcdir)/cmd/zed/zed_event.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_event.obj -MD -MP -MF $(DEPDIR)/zed_event.Tpo -c -o zed_event.obj `if test -f '$(top_srcdir)/cmd/zed/zed_event.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_event.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_event.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_event.Tpo $(DEPDIR)/zed_event.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_event.c' object='zed_event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_event.obj `if test -f '$(top_srcdir)/cmd/zed/zed_event.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_event.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_event.c'; fi`

zed_exec.o: $(top_srcdir)/cmd/zed/zed_exec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_exec.o -MD -MP -MF $(DEPDIR)/zed_exec.Tpo -c -o zed_exec.o `test -f '$(top_srcdir)/cmd/zed/zed_exec.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_exec.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_exec.Tpo $(DEPDIR)/zed_exec.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_exec.c' object='zed_exec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_exec.o `test -f '$(top_srcdir)/cmd/zed/zed_exec.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_exec.c

zed_exec.obj: $(top_srcdir)/cmd/zed/zed_exec.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_exec.obj -MD -MP -MF $(DEPDIR)/zed_exec.Tpo -c -o zed_exec.obj `if test -f '$(top_srcdir)/cmd/zed/zed_exec.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_exec.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_exec.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_exec.Tpo $(DEPDIR)/zed_exec.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_exec.c' object='zed_exec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_exec.obj `if test -f '$(top_srcdir)/cmd/zed/zed_exec.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_exec.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_exec.c'; fi`

zed_file.o: $(top_srcdir)/cmd/zed/zed_file.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_file.o -MD -MP -MF $(DEPDIR)/zed_file.Tpo -c -o zed_file.o `test -f '$(top_srcdir)/cmd/zed/zed_file.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_file.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_file.Tpo $(DEPDIR)/zed_file.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_file.c' object='zed_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_file.o `test -f '$(top_srcdir)/cmd/zed/zed_file.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_file.c

zed_file.obj: $(top_srcdir)/cmd/zed/zed_file.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_file.obj -MD -MP -MF $(DEPDIR)/zed_file.Tpo -c -o zed_file.obj `if test -f '$(top_srcdir)/cmd/zed/zed_file.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_file.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_file.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_file.Tpo $(DEPDIR)/zed_file.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_file.c' object='zed_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_file.obj `if test -f '$(top_srcdir)/cmd/zed/zed_file.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_file.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_file.c'; fi`

zed_log.o: $(top_srcdir)/cmd/zed/zed_log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_log.o -MD -MP -MF $(DEPDIR)/zed_log.Tpo -c -o zed_log.o `test -f '$(top_srcdir)/cmd/zed/zed_log.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_log.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_log.Tpo $(DEPDIR)/zed_log.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_log.c' object='zed_log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_log.o `test -f '$(top_srcdir)/cmd/zed/zed_log.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_log.c

zed_log.obj: $(top_srcdir)/cmd/zed/zed_log.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_log.obj -MD -MP -MF $(DEPDIR)/zed_log.Tpo -c -o zed_log.obj `if test -f '$(top_srcdir)/cmd/zed/zed_log.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_log.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_log.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_log.Tpo $(DEPDIR)/zed_log.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_log.c' object='zed_log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_log.obj `if test -f '$(top_srcdir)/cmd/zed/zed_log.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_log.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_log.c'; fi`

zed_strings.o: $(top_srcdir)/cmd/zed/zed_strings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_strings.o -MD -MP -MF $(DEPDIR)/zed_strings.Tpo -c -o zed_strings.o `test -f '$(top_srcdir)/cmd/zed/zed_strings.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_strings.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_strings.Tpo $(DEPDIR)/zed_strings.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_strings.c' object='zed_strings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_strings.o `test -f '$(top_srcdir)/cmd/zed/zed_strings.c' || echo '$(srcdir)/'`$(top_srcdir)/cmd/zed/zed_strings.c

zed_strings.obj: $(top_srcdir)/cmd/zed/zed_strings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT zed_strings.obj -MD -MP -MF $(DEPDIR)/zed_strings.Tpo -c -o zed_strings.obj `if test -f '$(top_srcdir)/cmd/zed/zed_strings.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_strings.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_strings.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zed_strings.Tpo $(DEPDIR)/zed_strings.Po
#	$(AM_V_CC)source='$(top_srcdir)/cmd/zed/zed_strings.c' object='zed_strings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o zed_strings.obj `if test -f '$(top_srcdir)/cmd/zed/zed_strings.c'; then $(CYGPATH_W) '$(top_srcdir)/cmd/zed/zed_strings.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/cmd/zed/zed_strings.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_zedconfDATA: $(dist_zedconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(zedconfdir)" || $(MKDIR_P) "$(DESTDIR)$(zedconfdir)"
	@list='$(dist_zedconf_DATA)'; test -n "$(zedconfdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(zedconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(zedconfdir)" || exit $$?; \
	done

uninstall-dist_zedconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_zedconf_DATA)'; test -n "$(zedconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(zedconfdir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(zedexecdir)" "$(DESTDIR)$(zedconfdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-sbinPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-dist_zedconfDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-dist_zedexecSCRIPTS install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dist_zedconfDATA uninstall-dist_zedexecSCRIPTS \
	uninstall-sbinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-sbinPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-local install-dist_zedconfDATA \
	install-dist_zedexecSCRIPTS install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-sbinPROGRAMS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-dist_zedconfDATA uninstall-dist_zedexecSCRIPTS \
	uninstall-sbinPROGRAMS


install-data-local:
	$(MKDIR_P) "$(DESTDIR)$(zedconfdir)"
	for f in $(zedconfdefaults); do \
	  test -f "$(DESTDIR)$(zedconfdir)/$${f}" -o \
	       -L "$(DESTDIR)$(zedconfdir)/$${f}" || \
	    ln -s "$(zedexecdir)/$${f}" "$(DESTDIR)$(zedconfdir)"; \
	done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
